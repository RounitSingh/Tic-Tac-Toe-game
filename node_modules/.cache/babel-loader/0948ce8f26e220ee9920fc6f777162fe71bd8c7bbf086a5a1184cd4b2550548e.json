{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Tic-Tac-Toe game\\\\01-starting-setup\\\\src\\\\components\\\\App1.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Board from \"./Board\";\n// import GameDone from \"./GameDone\";\nimport GameState from \"./GameState\";\nimport Reset from \"./Reset\";\nimport gameOverSoundAsset from \"../sounds/game_over.wav\";\nimport clickSoundAsset from \"../sounds/click.wav\";\nimport GameDone from \"./GameDone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gameOverSound = new Audio(gameOverSoundAsset);\ngameOverSound.volume = 0.2;\nconst clickSound = new Audio(clickSoundAsset);\nclickSound.volume = 0.5;\nconst PLAYER_X = \"X\";\nconst PLAYER_O = \"O\";\nconst arr = [\n//Rows\n{\n  c: [0, 1, 2],\n  d: \"strike-row-1\"\n}, {\n  c: [3, 4, 5],\n  d: \"strike-row-2\"\n}, {\n  c: [6, 7, 8],\n  d: \"strike-row-3\"\n},\n//Columns\n{\n  c: [0, 3, 6],\n  d: \"strike-column-1\"\n}, {\n  c: [1, 4, 7],\n  d: \"strike-column-2\"\n}, {\n  c: [2, 5, 8],\n  d: \"strike-column-3\"\n},\n//Diagonals\n{\n  c: [0, 4, 8],\n  d: \"strike-diagonal-1\"\n}, {\n  c: [2, 4, 6],\n  d: \"strike-diagonal-2\"\n}];\nfunction checkWinner(t, setStrikeClass, setGameState) {\n  for (const {\n    combo,\n    strikeClass\n  } of winningCombinations) {\n    const tileValue1 = tiles[combo[0]];\n    const tileValue2 = tiles[combo[1]];\n    const tileValue3 = tiles[combo[2]];\n    if (tileValue1 !== null && tileValue1 === tileValue2 && tileValue1 === tileValue3) {\n      setD(d);\n      if (tileValue1 === PLAYER_X) {\n        setState(GameState.playerXWins);\n      } else {\n        setState(GameState.playerOWins);\n      }\n      return;\n    }\n  }\n  const areAllTilesFilledIn = t.every(tile => tile !== null);\n  if (areAllTilesFilledIn) {\n    setState(GameState.draw);\n  }\n}\nfunction App1() {\n  _s();\n  const [t, setT] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState(PLAYER_X);\n  const [d, setD] = useState();\n  const [state, setState] = useState(GameState.inProgress);\n  const handleTileClick = i => {\n    if (state !== GameState.inProgress) {\n      return;\n    }\n    if (t[i] !== null) {\n      return;\n    }\n    const newtile = {\n      ...t\n    };\n    newtile[i] = turn;\n    setT(newtile);\n    if (turn === PLAYER_X) {\n      setTurn(PLAYER_O);\n    } else {\n      setTurn(PLAYER_X);\n    }\n  };\n  const handleReset = () => {\n    setState(GameState.inProgress);\n    setT(Array(9).fill(null));\n    setTurn(PLAYER_X);\n    setD(null);\n  };\n  useEffect(() => {\n    checkWinner(t, setD, setState);\n  }, [t]);\n  useEffect(() => {\n    if (t.some(tile => tile !== null)) {\n      clickSound.play();\n    }\n  }, [t]);\n  useEffect(() => {\n    if (state !== GameState.inProgress) {\n      gameOverSound.play();\n    }\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Board, {\n      turn: turn,\n      t: t,\n      onTileClick: handleTileClick,\n      d: d\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GameDone, {\n      state: state\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reset, {\n      state: state,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(App1, \"Arv1JBnJf9pHLgeF7q9DXHyStTk=\");\n_c = App1;\nexport default App1;\nvar _c;\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"names":["useState","useEffect","Board","GameState","Reset","gameOverSoundAsset","clickSoundAsset","GameDone","jsxDEV","_jsxDEV","gameOverSound","Audio","volume","clickSound","PLAYER_X","PLAYER_O","arr","c","d","checkWinner","t","setStrikeClass","setGameState","combo","strikeClass","winningCombinations","tileValue1","tiles","tileValue2","tileValue3","setD","setState","playerXWins","playerOWins","areAllTilesFilledIn","every","tile","draw","App1","_s","setT","Array","fill","turn","setTurn","state","inProgress","handleTileClick","i","newtile","handleReset","some","play","children","fileName","_jsxFileName","lineNumber","columnNumber","onTileClick","onReset","_c","$RefreshReg$"],"sources":["E:/react/Tic-Tac-Toe game/01-starting-setup/src/components/App1.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Board from \"./Board\";\r\n// import GameDone from \"./GameDone\";\r\nimport GameState from \"./GameState\";\r\nimport Reset from \"./Reset\";\r\nimport gameOverSoundAsset from \"../sounds/game_over.wav\";\r\nimport clickSoundAsset from \"../sounds/click.wav\";\r\nimport GameDone from \"./GameDone\";\r\n\r\nconst gameOverSound = new Audio(gameOverSoundAsset);\r\ngameOverSound.volume = 0.2;\r\nconst clickSound = new Audio(clickSoundAsset);\r\nclickSound.volume = 0.5;\r\n\r\nconst PLAYER_X = \"X\";\r\nconst PLAYER_O = \"O\";\r\n\r\nconst arr = [\r\n  //Rows\r\n  { c: [0, 1, 2], d: \"strike-row-1\" },\r\n  { c: [3, 4, 5], d: \"strike-row-2\" },\r\n  { c: [6, 7, 8], d: \"strike-row-3\" },\r\n\r\n  //Columns\r\n  { c: [0, 3, 6], d: \"strike-column-1\" },\r\n  { c: [1, 4, 7], d: \"strike-column-2\" },\r\n  { c: [2, 5, 8], d: \"strike-column-3\" },\r\n\r\n  //Diagonals\r\n  { c: [0, 4, 8], d: \"strike-diagonal-1\" },\r\n  { c: [2, 4, 6], d: \"strike-diagonal-2\" },\r\n];\r\n\r\nfunction checkWinner(t, setStrikeClass, setGameState) {\r\n  for (const { combo, strikeClass } of winningCombinations) {\r\n    const tileValue1 = tiles[combo[0]];\r\n    const tileValue2 = tiles[combo[1]];\r\n    const tileValue3 = tiles[combo[2]];\r\n\r\n    if (\r\n      tileValue1 !== null &&\r\n      tileValue1 === tileValue2 &&\r\n      tileValue1 === tileValue3\r\n    ) {\r\n      setD(d);\r\n      if (tileValue1 === PLAYER_X) {\r\n        setState(GameState.playerXWins);\r\n      } else {\r\n        setState(GameState.playerOWins);\r\n      }\r\n      return;\r\n    }\r\n  }\r\n\r\n  const areAllTilesFilledIn = t.every((tile) => tile !== null);\r\n  if (areAllTilesFilledIn) {\r\n    setState(GameState.draw);\r\n  }\r\n}\r\n \r\n\r\n\r\nfunction App1() {\r\n  const [t, setT] = useState(Array(9).fill(null));\r\n  const [turn, setTurn] = useState(PLAYER_X);\r\n  const [d, setD] = useState();\r\n  const [state, setState] = useState(GameState.inProgress);\r\n\r\n  const handleTileClick = (i) => {\r\n    if (state !== GameState.inProgress) {\r\n      return;\r\n    }\r\n\r\n    if (t[i] !== null) {\r\n      return;\r\n    }\r\n    const newtile={...t};\r\n    newtile[i]=turn;\r\n    setT(newtile);\r\n    if(turn === PLAYER_X){\r\n      setTurn(PLAYER_O);\r\n    }\r\n    else{\r\n      setTurn(PLAYER_X);\r\n    }\r\n  };\r\n    \r\n\r\n  const handleReset = () => {\r\n    setState(GameState.inProgress);\r\n    setT(Array(9).fill(null));\r\n    setTurn(PLAYER_X);\r\n    setD(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkWinner(t, setD, setState);\r\n  }, [t]);\r\n\r\n  useEffect(() => {\r\n    if (t.some((tile) => tile !== null)) {\r\n      clickSound.play();\r\n    }\r\n  }, [t]);\r\n\r\n  useEffect(() => {\r\n    if (state !== GameState.inProgress) {\r\n      gameOverSound.play();\r\n    }\r\n  }, [state]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Tic Tac Toe</h1>\r\n      <Board\r\n        turn={turn}\r\n        t={t}\r\n        onTileClick={handleTileClick}\r\n        d={d}\r\n      />\r\n      <GameDone state={state} />\r\n      <Reset state={state} onReset={handleReset} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}